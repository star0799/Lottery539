name: Build and Package WinForms App

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Check if version.txt exists
      run: |
        $versionFilePath = ".\publish\version.txt"
        $versionDirectory = Get-Item -Path $versionFilePath | Select-Object -ExpandProperty Directory
    
        if (-not (Test-Path $versionDirectory)) {
          Write-Host "Creating directory: $versionDirectory"
          New-Item -ItemType Directory -Path $versionDirectory | Out-Null
        }
    
        Write-Host "Creating version.txt"
        Get-Date | Out-File -FilePath $versionFilePath

    - name: Set version
      id: set-version
      run: echo "::set-output name=version::$(cat .\publish\version.txt)"

    - name: Build
      run: |
        nuget restore Lottery539.sln
        msbuild /p:Configuration=Release /p:Version=$(cat .\publish\version.txt) Lottery539.sln

    - name: Publish
      run: |
        mkdir publish
        xcopy /y /s .\bin\Release\* .\publish\

    - name: Package
      run: Compress-Archive -Path publish -DestinationPath output.zip
      
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: build-artifact
        path: .\publish

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: build-artifact

      - name: Set version
        id: set-version
        run: echo "::set-output name=version::$(cat .\publish\version.txt)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.set-version.outputs.version }}
          release_name: Release ${{ steps.set-version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output.zip
          asset_name: Lottery539-${{ steps.set-version.outputs.version }}.zip
          asset_content_type: application/zip
          
      - name: Upload version.txt as artifact
        uses: actions/upload-artifact@v2
        with:
            name: version-info
            path: .\publish\version.txt 
