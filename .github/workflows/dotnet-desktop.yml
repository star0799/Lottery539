name: Build and Package WinForms App

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set version
      id: set-version
      run: |
        current_version=$(Get-Content version.txt)    
        new_version=$(echo $current_version | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
        echo $new_version > version.txt
        echo "::set-output name=version::$new_version"

    - name: Build
      run: |
        nuget restore Lottery539.sln
        msbuild /p:Configuration=Release /p:Version=${{ steps.set-version.outputs.version }} Lottery539.sln

    - name: Publish
      run: |
        mkdir publish
        xcopy /y /s .\bin\Release\* .\publish\

    - name: Package
      run: Compress-Archive -Path publish -DestinationPath output.zip
      
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: winforms-app
        path: output.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: winforms-app

      - name: Set version
        id: set-version
        run: |
          # Read the current version from version.txt
          version=$(cat version.txt)
          
          # Increment the version number
          new_version=$(echo $version | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          
          # Update version.txt with the new version
          echo $new_version > version.txt

          # Set the output variable
          echo "::set-output name=version::$new_version"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.set-version.outputs.version }}
          release_name: Release ${{ steps.set-version.outputs.version }}
          draft: false
          prerelease: false
      
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output.zip
          asset_name: Lottery539-${{ steps.set-version.outputs.version }}.zip
          asset_content_type: application/zip
          
      - name: Upload version.txt as artifact
        uses: actions/upload-artifact@v2
        with:
            name: version-info
            path: version.txt
